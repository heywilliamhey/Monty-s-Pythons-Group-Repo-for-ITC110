#list o' classes
CSC110 = {
	"name": "CSC-110",
	"prereq": []
}
CSC142 = {
	"name": "CSC-142",
	"prereq": []
}
WEB105 = {
	"name": "WEB-105",
	"prereq": []
}
WEB110 = {
	"name": "WEB-110",
	"prereq": []
}
WEB120 = {
	"name": "WEB-120",
	"prereq": []
}
WEB150 = {
	"name": "WEB-150",
	"prereq": []
}
WEB170 = {
	"name": "WEB-170",
	"prereq": []
}
WEB205 = {
	"name": "WEB-205",
	"prereq": []
}
MATH092 = {
	"name":"MATH-092",
	"prereq":[]
        
}
MATH096 = {
	"name":"MATH-096",
	"prereq":[]
        
}


MATH098 = {
	"name":"MATH-098",
	"prereq":[]
        
}
MATH116 = {
	"name":"MATH-116",
	"prereq":[]
        
}
MATH136 = {
	"name": "MATH-136",
	"prereq": [MATH098, MATH116]
	       
}


MATH146 = {
	"name": "MATH-146",
	"prereq": [MATH098, MATH116],
	"alt": MATH136       
}
BUS120 = {
	"name": "BUS-120",
	"prereq": []
}

BUS140 = {
	"name": "BUS-140",
	"prereq": []
}
BUS240 = {
	"name": "BUS-240",
	"prereq":[]
}
NET200 = {
	"name": "NET200",
	"prereq": []
}
MIC175 = {
	"name": "MIC-175",
	"prereq": [],
	"alt": BUS140              
}

	
ITC110 = {
	"name": "ITC-110",
	"prereq": [],
	"alt": CSC110
               
}

ITC240 = {
	"name":"ITC-240",
	"prereq":[WEB110]
        
}

ITC250 = {
	"name":"ITC-250",
	"prereq":[ITC240]
        
}
ITC280 = {
	"name":"ITC-280",
	"prereq":[]
        
}
ITC115 = {
	"name": "ITC-115",
	"prereq": [],
	"alt": CSC142
}

ITC162 = {
	"name": "ITC-162",
	"prereq": [ITC110],
	
}
ITC260 = {
	"name":"ITC-260",
	"prereq":[ITC250],
	"alt": [ITC110]
}

CSC143 = {
	"name": "CSC-143",
	"prereq": [],
	"alt": ITC162
}

ENGL101 = {
	"name": "ENGL-101",
	"prereq":[]
}
ENGL106 = {
	"name":"ENGL-106",
	"prereq":[]
}
HUM105 = {
	"name": "HUM-105",
	"prereq": []
}
ITC102 = {
        "name": "ITC-102",
	"prereq": []
}

MIC101 = {
	"name": "MIC-101",
	"prereq": [],      
}

ITC136 = {
	"name":"ITC-136",
	"prereq":[MIC101, ITC102]
}
ITC138 = {
	"name": "ITC-138",
	"prereq": [],
	"alt": BUS140       
}
ITC140 = {
	"name":"ITC-140",
	"prereq":[ITC102]
}
NET120 = {
	"name": "NET-120",
	"prereq": [MIC101],      
}
ITC151 = {
	"name": "ITC-151",
	"prereq": [NET120]
}
ITC172 = {
	"name":"ITC-172",
	"prereq":[ITC110]
        
}

ITC197 = {
	"name": "ITC-197",
	"prereq": []
}

ITC210 = {
	"name":"ITC-210",
	"prereq":[ITC280]
        
}
ITC220 = {
	"name":"ITC-220",
	"prereq": [MIC101]
     
}
ITC255 = {
	"name":"ITC-255",
	"prereq":[ITC110]
        
}
###CAN ONLY TAKE IN LAST QUARTER OF DEGREE
ITC285 = {
	"name":"ITC-285",
	"prereq":[]
        
}
### SPECIAL TOPIC
ITC298 = {
	"name":"ITC-298",
	"prereq":[]        
}
### INDEPENDENT STUDY
ITC299 = {
	"name":"ITC-299",
	"prereq":[]       
}
MATH096 = {
	"name": "MATH-096",
	"prereq": [],
	       
}
MATH119 = {
	"name": "MATH-119",
	"prereq": [],
	"alt": MATH146       
}
MATH136 = {
	"name": "MATH-136",
	"prereq": [MATH092],
         
}
NET122 = {
	"name": "NET-122",
	"prereq": [NET120],      
}
NET134 = {
	"name": "NET-134",
	"prereq": [NET122],      
}

NET124 = {
	"name": "NET-124",
	"prereq": [NET134]     
}
NET126 = {
	"name": "NET-126",
	"prereq": [NET122, NET134],      
}
NET138 = {
	"name": "NET-138",
	"prereq": [ITC136],           
}
NET142 = {
	"name": "NET-142",
	"prereq": [ITC140],      
}
NET144 = {
	"name": "NET-144",
	"prereq": [NET142],      
}
NET146 = {
	"name": "NET-146",
	"prereq": [NET144],      
}




#list o' majors
#IMPORTANT: Do not put a class before its prerequisites
NetworkDesignAdmin = [ENGL106, ITC102, ITC140, MATH092,
                      MATH096, MATH098, MATH116, MATH119,
                       MIC101, MIC175, BUS120,
                       ITC136, ITC151, NET120, NET122, NET124,
                       NET126, NET134, NET138, NET142,
                       NET144, NET146, NET200, ITC197,
                       ENGL106, MATH136, MATH146]
Programming = [ENGL106, ITC102, MATH092, MATH096, MATH098, MATH116, MATH119, MIC101, MIC175,
              BUS140, ITC110, CSC110, ITC115, CSC142,
              ITC172, ITC197, ITC220, ITC240, ITC250, ITC255,
              ITC298, WEB110, ENGL101, HUM105, ITC285,
              MATH136, MATH146,]
WebDevelopment = [ENGL106, ITC102, MATH092, MATH096, MATH098, MATH116, MATH119, MIC101, WEB110,
                  ITC110, CSC110, ITC115, CSC142, ITC136,
                  ITC172, ITC197, ITC210, ITC220, ITC240, ITC250,
                  ITC260, ITC298, WEB105, WEB110, WEB120, WEB150,
                  WEB170, WEB205, BUS240, ENGL101, HUM105,
                  ITC285, MATH136, MATH146]

majors = ["Network","Program","Web"]

def majorParse(major): #takes input and turns it into variable
	return {
		"network": NetworkDesignAdmin,
		"program": Programming,
		"web": WebDevelopment
	}.get(major,None)

major =  majorParse(input("What is your major? (Network Design Admin/Programming/Web Development) ").lower())#set major.
while major == None: #for invalid input
	print("I didn't understand that")
	major =  majorParse(input("What is your major? (Network Design Admin/Programing/Web Development) ").lower())#try again to set major. Forever.

def inParse(a): #Takes user input and returns True/False/None
	i = ''.join(filter(str.isalpha, a))
	if i == "y":
		return True
	elif i == "n":
		return False
	else:
		print("I don't understand? Try y or n.")
		return None
currentClass = None #The class we are looking at.
unReq = [] #Classes that have already been taken and are, therefore, no longer required
candidateClasses = [] #Classes you can take
def prereqsMet(prereqs,taken): #Looks at the classes you've taken and compares them to the prereqs of a class
	for i in prereqs:
		if i["name"] not in taken: #if you haven't taken any of the prereqs you can not take the class
			return False
	return True
for i in major: #Looks through list of required classes
	currentClass = i
	#exclude classes with prereqs you haven't taken
	if not prereqsMet(i["prereq"],unReq):
		continue
	taken = inParse(input("Have you taken "+currentClass["name"]+"? y/n ")) #Have you taken this class?
	while taken == None: #for invalid input
		print("I didn't understand. Please try again.")
		taken = inParse(input("Have you taken "+currentClass["name"]+"? y/n "))
	if taken == False:
		alternate = currentClass.get("alt", None) #Is there an alternate class?
		if alternate != None:
			taken = inParse(input("Have you taken "+alternate["name"]+"? y/n ")) #Did you take the alternate class
			while taken == None: #for invalid input
				print("I didn't understand. Please try again.")
				taken = inParse(input("Have you taken "+alternate["name"]+"? y/n "))
	if taken == True: #if you have taken a class or it's alternate it is no longer required.
		unReq.append(currentClass["name"])
	else:
		#push remaining classes to candidate classes
		candidateClasses.append(i["name"])
		alternate = i.get("alt", None)
		if alternate != None: #If there is an alternate class you can take that too.
			candidateClasses.append(alternate["name"])
		continue
print(unReq)
print("You can take",candidateClasses)

